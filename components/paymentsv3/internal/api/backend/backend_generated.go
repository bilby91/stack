// Code generated by MockGen. DO NOT EDIT.
// Source: backend.go

// Package backend is a generated GoMock package.
package backend

import (
	context "context"
	reflect "reflect"

	plugins "github.com/formancehq/paymentsv3/internal/connectors/plugins"
	models "github.com/formancehq/paymentsv3/internal/models"
	storage "github.com/formancehq/paymentsv3/internal/storage"
	bunpaginate "github.com/formancehq/stack/libs/go-libs/bun/bunpaginate"
	gomock "github.com/golang/mock/gomock"
)

// MockBackend is a mock of Backend interface.
type MockBackend struct {
	ctrl     *gomock.Controller
	recorder *MockBackendMockRecorder
}

// MockBackendMockRecorder is the mock recorder for MockBackend.
type MockBackendMockRecorder struct {
	mock *MockBackend
}

// NewMockBackend creates a new mock instance.
func NewMockBackend(ctrl *gomock.Controller) *MockBackend {
	mock := &MockBackend{ctrl: ctrl}
	mock.recorder = &MockBackendMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBackend) EXPECT() *MockBackendMockRecorder {
	return m.recorder
}

// GetConnectorConfigs mocks base method.
func (m *MockBackend) GetConnectorConfigs() plugins.Configs {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConnectorConfigs")
	ret0, _ := ret[0].(plugins.Configs)
	return ret0
}

// GetConnectorConfigs indicates an expected call of GetConnectorConfigs.
func (mr *MockBackendMockRecorder) GetConnectorConfigs() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConnectorConfigs", reflect.TypeOf((*MockBackend)(nil).GetConnectorConfigs))
}

// ListConnectors mocks base method.
func (m *MockBackend) ListConnectors(ctx context.Context, query storage.ListConnectorssQuery) (*bunpaginate.Cursor[models.Connector], error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListConnectors", ctx, query)
	ret0, _ := ret[0].(*bunpaginate.Cursor[models.Connector])
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListConnectors indicates an expected call of ListConnectors.
func (mr *MockBackendMockRecorder) ListConnectors(ctx, query interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListConnectors", reflect.TypeOf((*MockBackend)(nil).ListConnectors), ctx, query)
}
