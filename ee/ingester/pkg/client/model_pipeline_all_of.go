/*
Formance Simple ingester Service API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ingesterclient

import (
	"encoding/json"
	"time"
)

// checks if the PipelineAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PipelineAllOf{}

// PipelineAllOf struct for PipelineAllOf
type PipelineAllOf struct {
	Id string `json:"id"`
	State State `json:"state"`
	CreatedAt time.Time `json:"createdAt"`
}

// NewPipelineAllOf instantiates a new PipelineAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipelineAllOf(id string, state State, createdAt time.Time) *PipelineAllOf {
	this := PipelineAllOf{}
	this.Id = id
	this.State = state
	this.CreatedAt = createdAt
	return &this
}

// NewPipelineAllOfWithDefaults instantiates a new PipelineAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipelineAllOfWithDefaults() *PipelineAllOf {
	this := PipelineAllOf{}
	return &this
}

// GetId returns the Id field value
func (o *PipelineAllOf) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PipelineAllOf) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PipelineAllOf) SetId(v string) {
	o.Id = v
}

// GetState returns the State field value
func (o *PipelineAllOf) GetState() State {
	if o == nil {
		var ret State
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *PipelineAllOf) GetStateOk() (*State, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *PipelineAllOf) SetState(v State) {
	o.State = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *PipelineAllOf) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PipelineAllOf) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PipelineAllOf) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o PipelineAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PipelineAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["state"] = o.State
	toSerialize["createdAt"] = o.CreatedAt
	return toSerialize, nil
}

type NullablePipelineAllOf struct {
	value *PipelineAllOf
	isSet bool
}

func (v NullablePipelineAllOf) Get() *PipelineAllOf {
	return v.value
}

func (v *NullablePipelineAllOf) Set(val *PipelineAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePipelineAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePipelineAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipelineAllOf(val *PipelineAllOf) *NullablePipelineAllOf {
	return &NullablePipelineAllOf{value: val, isSet: true}
}

func (v NullablePipelineAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipelineAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


