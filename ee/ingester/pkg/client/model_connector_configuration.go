/*
Formance Simple ingester Service API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ingesterclient

import (
	"encoding/json"
)

// checks if the ConnectorConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectorConfiguration{}

// ConnectorConfiguration struct for ConnectorConfiguration
type ConnectorConfiguration struct {
	Driver string `json:"driver"`
	Config map[string]interface{} `json:"config"`
}

// NewConnectorConfiguration instantiates a new ConnectorConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorConfiguration(driver string, config map[string]interface{}) *ConnectorConfiguration {
	this := ConnectorConfiguration{}
	this.Driver = driver
	this.Config = config
	return &this
}

// NewConnectorConfigurationWithDefaults instantiates a new ConnectorConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorConfigurationWithDefaults() *ConnectorConfiguration {
	this := ConnectorConfiguration{}
	return &this
}

// GetDriver returns the Driver field value
func (o *ConnectorConfiguration) GetDriver() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Driver
}

// GetDriverOk returns a tuple with the Driver field value
// and a boolean to check if the value has been set.
func (o *ConnectorConfiguration) GetDriverOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Driver, true
}

// SetDriver sets field value
func (o *ConnectorConfiguration) SetDriver(v string) {
	o.Driver = v
}

// GetConfig returns the Config field value
func (o *ConnectorConfiguration) GetConfig() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *ConnectorConfiguration) GetConfigOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Config, true
}

// SetConfig sets field value
func (o *ConnectorConfiguration) SetConfig(v map[string]interface{}) {
	o.Config = v
}

func (o ConnectorConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectorConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["driver"] = o.Driver
	toSerialize["config"] = o.Config
	return toSerialize, nil
}

type NullableConnectorConfiguration struct {
	value *ConnectorConfiguration
	isSet bool
}

func (v NullableConnectorConfiguration) Get() *ConnectorConfiguration {
	return v.value
}

func (v *NullableConnectorConfiguration) Set(val *ConnectorConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorConfiguration(val *ConnectorConfiguration) *NullableConnectorConfiguration {
	return &NullableConnectorConfiguration{value: val, isSet: true}
}

func (v NullableConnectorConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


