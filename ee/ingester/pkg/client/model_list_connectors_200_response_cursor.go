/*
Formance Simple ingester Service API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ingesterclient

import (
	"encoding/json"
)

// checks if the ListConnectors200ResponseCursor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListConnectors200ResponseCursor{}

// ListConnectors200ResponseCursor struct for ListConnectors200ResponseCursor
type ListConnectors200ResponseCursor struct {
	PageSize int64 `json:"pageSize"`
	HasMore bool `json:"hasMore"`
	Previous *string `json:"previous,omitempty"`
	Next *string `json:"next,omitempty"`
	Data []Connector `json:"data,omitempty"`
}

// NewListConnectors200ResponseCursor instantiates a new ListConnectors200ResponseCursor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListConnectors200ResponseCursor(pageSize int64, hasMore bool) *ListConnectors200ResponseCursor {
	this := ListConnectors200ResponseCursor{}
	this.PageSize = pageSize
	this.HasMore = hasMore
	return &this
}

// NewListConnectors200ResponseCursorWithDefaults instantiates a new ListConnectors200ResponseCursor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListConnectors200ResponseCursorWithDefaults() *ListConnectors200ResponseCursor {
	this := ListConnectors200ResponseCursor{}
	return &this
}

// GetPageSize returns the PageSize field value
func (o *ListConnectors200ResponseCursor) GetPageSize() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value
// and a boolean to check if the value has been set.
func (o *ListConnectors200ResponseCursor) GetPageSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageSize, true
}

// SetPageSize sets field value
func (o *ListConnectors200ResponseCursor) SetPageSize(v int64) {
	o.PageSize = v
}

// GetHasMore returns the HasMore field value
func (o *ListConnectors200ResponseCursor) GetHasMore() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasMore
}

// GetHasMoreOk returns a tuple with the HasMore field value
// and a boolean to check if the value has been set.
func (o *ListConnectors200ResponseCursor) GetHasMoreOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasMore, true
}

// SetHasMore sets field value
func (o *ListConnectors200ResponseCursor) SetHasMore(v bool) {
	o.HasMore = v
}

// GetPrevious returns the Previous field value if set, zero value otherwise.
func (o *ListConnectors200ResponseCursor) GetPrevious() string {
	if o == nil || IsNil(o.Previous) {
		var ret string
		return ret
	}
	return *o.Previous
}

// GetPreviousOk returns a tuple with the Previous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListConnectors200ResponseCursor) GetPreviousOk() (*string, bool) {
	if o == nil || IsNil(o.Previous) {
		return nil, false
	}
	return o.Previous, true
}

// HasPrevious returns a boolean if a field has been set.
func (o *ListConnectors200ResponseCursor) HasPrevious() bool {
	if o != nil && !IsNil(o.Previous) {
		return true
	}

	return false
}

// SetPrevious gets a reference to the given string and assigns it to the Previous field.
func (o *ListConnectors200ResponseCursor) SetPrevious(v string) {
	o.Previous = &v
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *ListConnectors200ResponseCursor) GetNext() string {
	if o == nil || IsNil(o.Next) {
		var ret string
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListConnectors200ResponseCursor) GetNextOk() (*string, bool) {
	if o == nil || IsNil(o.Next) {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *ListConnectors200ResponseCursor) HasNext() bool {
	if o != nil && !IsNil(o.Next) {
		return true
	}

	return false
}

// SetNext gets a reference to the given string and assigns it to the Next field.
func (o *ListConnectors200ResponseCursor) SetNext(v string) {
	o.Next = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ListConnectors200ResponseCursor) GetData() []Connector {
	if o == nil || IsNil(o.Data) {
		var ret []Connector
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListConnectors200ResponseCursor) GetDataOk() ([]Connector, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ListConnectors200ResponseCursor) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []Connector and assigns it to the Data field.
func (o *ListConnectors200ResponseCursor) SetData(v []Connector) {
	o.Data = v
}

func (o ListConnectors200ResponseCursor) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListConnectors200ResponseCursor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pageSize"] = o.PageSize
	toSerialize["hasMore"] = o.HasMore
	if !IsNil(o.Previous) {
		toSerialize["previous"] = o.Previous
	}
	if !IsNil(o.Next) {
		toSerialize["next"] = o.Next
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableListConnectors200ResponseCursor struct {
	value *ListConnectors200ResponseCursor
	isSet bool
}

func (v NullableListConnectors200ResponseCursor) Get() *ListConnectors200ResponseCursor {
	return v.value
}

func (v *NullableListConnectors200ResponseCursor) Set(val *ListConnectors200ResponseCursor) {
	v.value = val
	v.isSet = true
}

func (v NullableListConnectors200ResponseCursor) IsSet() bool {
	return v.isSet
}

func (v *NullableListConnectors200ResponseCursor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListConnectors200ResponseCursor(val *ListConnectors200ResponseCursor) *NullableListConnectors200ResponseCursor {
	return &NullableListConnectors200ResponseCursor{value: val, isSet: true}
}

func (v NullableListConnectors200ResponseCursor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListConnectors200ResponseCursor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


