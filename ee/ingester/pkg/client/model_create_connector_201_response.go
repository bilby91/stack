/*
Formance Simple ingester Service API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ingesterclient

import (
	"encoding/json"
)

// checks if the CreateConnector201Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateConnector201Response{}

// CreateConnector201Response struct for CreateConnector201Response
type CreateConnector201Response struct {
	Data Connector `json:"data"`
}

// NewCreateConnector201Response instantiates a new CreateConnector201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateConnector201Response(data Connector) *CreateConnector201Response {
	this := CreateConnector201Response{}
	this.Data = data
	return &this
}

// NewCreateConnector201ResponseWithDefaults instantiates a new CreateConnector201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateConnector201ResponseWithDefaults() *CreateConnector201Response {
	this := CreateConnector201Response{}
	return &this
}

// GetData returns the Data field value
func (o *CreateConnector201Response) GetData() Connector {
	if o == nil {
		var ret Connector
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *CreateConnector201Response) GetDataOk() (*Connector, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *CreateConnector201Response) SetData(v Connector) {
	o.Data = v
}

func (o CreateConnector201Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateConnector201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

type NullableCreateConnector201Response struct {
	value *CreateConnector201Response
	isSet bool
}

func (v NullableCreateConnector201Response) Get() *CreateConnector201Response {
	return v.value
}

func (v *NullableCreateConnector201Response) Set(val *CreateConnector201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateConnector201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateConnector201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateConnector201Response(val *CreateConnector201Response) *NullableCreateConnector201Response {
	return &NullableCreateConnector201Response{value: val, isSet: true}
}

func (v NullableCreateConnector201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateConnector201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


