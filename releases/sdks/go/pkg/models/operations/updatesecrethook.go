// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/formancehq/formance-sdk-go/v2/pkg/models/shared"
	"github.com/formancehq/formance-sdk-go/v2/pkg/utils"
	"net/http"
)

type UpdateSecretHookRequestBody struct {
	Secret *string `default:"" json:"secret"`
}

func (u UpdateSecretHookRequestBody) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UpdateSecretHookRequestBody) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UpdateSecretHookRequestBody) GetSecret() *string {
	if o == nil {
		return nil
	}
	return o.Secret
}

type UpdateSecretHookRequest struct {
	RequestBody UpdateSecretHookRequestBody `request:"mediaType=application/json"`
	// Hook ID
	HookID string `pathParam:"style=simple,explode=false,name=hookId"`
}

func (o *UpdateSecretHookRequest) GetRequestBody() UpdateSecretHookRequestBody {
	if o == nil {
		return UpdateSecretHookRequestBody{}
	}
	return o.RequestBody
}

func (o *UpdateSecretHookRequest) GetHookID() string {
	if o == nil {
		return ""
	}
	return o.HookID
}

type UpdateSecretHookResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	V2HookResponse *shared.V2HookResponse
}

func (o *UpdateSecretHookResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateSecretHookResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateSecretHookResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateSecretHookResponse) GetV2HookResponse() *shared.V2HookResponse {
	if o == nil {
		return nil
	}
	return o.V2HookResponse
}
